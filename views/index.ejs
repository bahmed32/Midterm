<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Meta Information -->
  <title>TODO</title>
  <!-- Always use this line to make it work for all platforms -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0' />
  <!-- External CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css"
    type="text/css" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link
    href="https://fonts.googleapis.com/css2?family=Bungee&family=Source+Sans+3:ital,wght@0,300;0,600;1,300;1,600&display=swap"
    rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    type="text/css" />

  <!-- App CSS -->
  <!-- <link rel="stylesheet" href="/styles/nav.css" type="text/css" /> -->
  <link rel="stylesheet" href="/styles/main.css" type="text/css" />
  <link rel="stylesheet" href="/styles/bootstrap.css" type="text/css" />

  <!-- External JS -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="/scripts/client.js"></script>


  <!-- App JS -->

  <script src="https://use.fontawesome.com/7165539a42.js"></script>
  <script src="https://apis.google.com/js/api.js"></script>
  <script>
    /**
     * Sample JavaScript code for language.documents.classifyText
     * See instructions for running APIs Explorer code samples locally:
     * https://developers.google.com/explorer-help/code-samples#javascript
     */

    function authenticate() {
      return gapi.auth2.getAuthInstance()
        .signIn({ scope: "https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform" })
        .then(function () { console.log("Sign-in successful"); },
          function (err) { console.error("Error signing in", err); });
    }
    function loadClient() {
      gapi.client.setApiKey("YOUR_API_KEY");
      return gapi.client.load("https://language.googleapis.com/$discovery/rest?version=v1")
        .then(function () { console.log("GAPI client loaded for API"); },
          function (err) { console.error("Error loading GAPI client for API", err); });
    }
    // Make sure the client is loaded and sign-in is complete before calling this method.
    function execute() {
      return gapi.client.language.documents.classifyText({
        "resource": {
          "document": {
            "content": "Jim Carrey",
            "type": "PLAIN_TEXT",
            "language": ""
          },
          "classificationModelOptions": {
            "v2Model": {
              "contentCategoriesVersion": "V2"
            }
          }
        }
      })
        .then(function (response) {
          // Handle the results here (response.result has the parsed body).
          console.log("Response", response);
        },
          function (err) { console.error("Execute error", err); });
    }
    gapi.load("client:auth2", function () {
      gapi.auth2.init({ client_id: "269683579985-3af5iq7352uj1cus9o9j4mo1e28g5peu.apps.googleusercontent.com" });
    });
  </script>

</head>

<body>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-light bg-body-tertiary fixed-top">
    <!-- <nav class="navbar navbar-expand-lg bg-body-tertiary"> -->
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor04"
        aria-controls="navbarColor04" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarColor04">
        <ul class="navbar-nav me-auto">
          <li class="nav-item">
            <a class="nav-link active" href="#">Home
              <span class="visually-hidden">(current)</span>
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">To Watch</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">To Read</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">About</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true"
              aria-expanded="false">Dropdown</a>
            <div class="dropdown-menu">
              <a class="dropdown-item" href="#">Action</a>
              <a class="dropdown-item" href="#">Another action</a>
              <a class="dropdown-item" href="#">Something else here</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item" href="#">Separated link</a>
            </div>
          </li>
        </ul>
        <div class="login-container">
          <form action="/action_page.php">
            <input type="text" placeholder="Username" name="username">
            <input type="text" placeholder="Password" name="psw">
            <button type="submit">Login</button>
          </form>
        </div>
      </div>
  </nav>
  <div class="container mt-5">
    <h1 class="text-center mb-4">Smart To-Do List</h1>

    <!-- To Do Form -->
    <form id="toDoForm" class="mb-4">
      <div class="mb-3">
        <label for="taskInput" class="form-label">New Task</label>
        <input type="text" class="form-control" id="taskInput" required>
      </div>
      <button id="addNew" type="submit" class="btn btn-primary">Add New</button>
      <button onclick="authenticate().then(loadClient)">authorize and load</button>
      <button onclick="execute()">execute</button>
    </form>

    <div class="row">
      <!-- Categories -->
      <div class="col-md-3">
        <div class="card">
          <div class="card-header bg-primary text-white">
            To Eat
          </div>
          <ul class="list-group list-group-flush" id="toEatList">
            <!-- To Eat items will be dynamically added here -->
          </ul>
        </div>
      </div>

      <div class="col-md-3">
        <div class="card">
          <div class="card-header bg-success text-white">
            To Read
          </div>
          <ul class="list-group list-group-flush" id="toReadList">
            <!-- To Read items will be dynamically added here -->
          </ul>
        </div>
      </div>

      <div class="col-md-3">
        <div class="card">
          <div class="card-header bg-warning">
            To Watch
          </div>
          <ul class="list-group list-group-flush" id="toWatchList">
            <!-- To Watch items will be dynamically added here -->
          </ul>
        </div>
      </div>

      <div class="col-md-3">
        <div class="card">
          <div class="card-header bg-secondary text-white">
            To Buy
          </div>
          <ul class="list-group list-group-flush" id="toBuyList">
            <!-- To Buy items will be dynamically added here -->
          </ul>
        </div>
      </div>
    </div>
  </div>

  <!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
      document.getElementById('toDoForm').addEventListener('submit', function (event) {
          event.preventDefault();

          const taskInput = document.getElementById('taskInput').value;
          const category = categorizeTask(taskInput);
          const listItem = createListItem(category, taskInput);
          document.getElementById(`${category}List`).appendChild(listItem);

          // Clear the input field
          document.getElementById('taskInput').value = '';
      });

      function categorizeTask(task) {
          // Add logic to categorize the task based on its description
          const taskLowercase = task.toLowerCase();

          if (taskLowercase.includes('eat')) {
              return 'toEat';
          } else if (taskLowercase.includes('read')) {
              return 'toRead';
          } else if (taskLowercase.includes('watch')) {
              return 'toWatch';
          } else if (taskLowercase.includes('buy')) {
              return 'toBuy';
          } else {
              // Default to 'toDo' if no specific category is determined
              return 'toDo';
          }
      }

      function createListItem(category, task) {
          const listItem = document.createElement('li');
          listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
          listItem.innerHTML = `
              ${task}
              <span class="badge bg-danger">Delete</span>
          `;

          return listItem;
      }

      // Add event listener for deleting tasks
      document.body.addEventListener('click', function (event) {
          if (event.target.classList.contains('badge')) {
              event.target.parentElement.remove();
          }
      });
  </script> -->

</body>

</html>